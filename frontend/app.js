const tg = window.Telegram.WebApp;
tg.expand();
tg.ready();

let currentProduct = null;
let selectedSize = null;
let cart = [];
let allProducts = [];
let pageHistory = ['home'];

// ========== –õ–û–ö–ê–õ–¨–ù–û–ï –•–†–ê–ù–ò–õ–ò–©–ï ==========
function loadCart() {
    const savedCart = localStorage.getItem('calistor_cart');
    if (savedCart) {
        cart = JSON.parse(savedCart);
    }
    updateCartCount();
}

function saveCart() {
    localStorage.setItem('calistor_cart', JSON.stringify(cart));
    updateCartCount();
}

function updateCartCount() {
    const count = cart.reduce((total, item) => total + item.quantity, 0);
    const cartCountElement = document.getElementById('cart-count');
    if (cartCountElement) {
        cartCountElement.textContent = count;
    }
}

// ========== –ù–ê–í–ò–ì–ê–¶–ò–Ø ==========
function showPage(pageName) {
    document.querySelectorAll('.page').forEach(page => {
        page.classList.remove('active');
    });
    
    const targetPage = document.getElementById(pageName + '-page');
    if (targetPage) {
        targetPage.classList.add('active');
        pageHistory.push(pageName);
    }
}

function goBack() {
    if (pageHistory.length > 1) {
        pageHistory.pop();
        const previousPage = pageHistory[pageHistory.length - 1];
        showPage(previousPage);
    } else {
        showPage('home');
    }
}

// ========== –ó–ê–ì–†–£–ó–ö–ê –¢–û–í–ê–†–û–í ==========
document.addEventListener('DOMContentLoaded', function() {
    loadCart();
    
    fetch("/api/products")
      .then(res => {
        if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤');
        return res.json();
      })
      .then(products => {
          allProducts = products;
          renderProducts(products);
      })
      .catch(error => {
          console.error('Error:', error);
          const productList = document.getElementById("product-list");
          if (productList) {
              productList.innerHTML = '<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤</p>';
          }
      });
});

// ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö –†–ê–ó–ú–ï–†–û–í ==========
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('size-btn')) {
        document.querySelectorAll('.size-btn').forEach(btn => {
            btn.classList.remove('selected');
        });
        e.target.classList.add('selected');
        selectedSize = e.target.dataset.size;
    }
});

// ========== –†–ï–ù–î–ï–† –¢–û–í–ê–†–û–í ==========
function renderProducts(products) {
    const container = document.getElementById("product-list");
    if (!container) return;
    
    container.innerHTML = products.map(product => {
        const mainImage = product.images && product.images.length > 0 
            ? product.images[0] 
            : product.image;
        
        return `
        <div class="product" onclick="openProduct(${product.id})">
            <img src="${mainImage}" alt="${product.name}" onerror="this.src='/static/images/placeholder.webp'" />
            <h3>${product.name}</h3>
            <p>${product.price}‚ÇΩ</p>
            <button class="add-to-cart-small" onclick="event.stopPropagation(); addToCartFromCard(${product.id})">
                –í –∫–æ—Ä–∑–∏–Ω—É
            </button>
        </div>
        `;
    }).join("");
}

// ========== –°–¢–†–ê–ù–ò–¶–ê –¢–û–í–ê–†–ê ==========
function openProduct(productId) {
    const product = allProducts.find(p => p.id === productId);
    if (product) {
        showProductDetail(product);
    }
}

function showProductDetail(product) {
    currentProduct = product;
    selectedSize = null;
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    document.getElementById('product-title').textContent = product.name;
    document.getElementById('product-price').textContent = `${product.price}‚ÇΩ`;
    document.getElementById('product-color').textContent = product.color;
    document.getElementById('product-composition').textContent = product.composition;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const mainImages = product.images_large || [product.image_large];
    document.getElementById('product-main-image').src = mainImages[0] || product.image;
    
    // –°–æ–∑–¥–∞–µ–º –≥–∞–ª–µ—Ä–µ—é –º–∏–Ω–∏–∞—Ç—é—Ä –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const thumbnailsContainer = document.getElementById('product-thumbnails');
    if (mainImages.length > 1) {
        thumbnailsContainer.innerHTML = mainImages.map((img, index) => `
            <img src="${img}" class="thumbnail ${index === 0 ? 'active' : ''}" 
                 onclick="changeMainImage('${img}', this)">
        `).join('');
    } else {
        thumbnailsContainer.innerHTML = '';
    }
    
    document.getElementById('product-description-text').textContent = product.description;
    
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–≤
    const sizeButtonsContainer = document.getElementById('size-buttons');
    if (sizeButtonsContainer) {
        const availableSizes = product.sizes || [];
        
        if (availableSizes.length > 0) {
            sizeButtonsContainer.innerHTML = availableSizes.map(size => `
                <button class="size-btn" data-size="${size}">${size}</button>
            `).join('');
        } else {
            sizeButtonsContainer.innerHTML = '<p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤</p>';
        }
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞
    document.querySelectorAll('.size-btn').forEach(btn => {
        btn.classList.remove('selected');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
    showPage('product');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function changeMainImage(src, element) {
    document.getElementById('product-main-image').src = src;
    document.querySelectorAll('.thumbnail').forEach(thumb => {
        thumb.classList.remove('active');
    });
    element.classList.add('active');
}

// ========== –ö–û–†–ó–ò–ù–ê ==========
function addToCartFromCard(productId) {
    const product = allProducts.find(p => p.id === productId);
    if (!product) return;

    const availableSizes = product.sizes || [];
    
    if (availableSizes.length === 1) {
        const autoSize = availableSizes[0];
        
        const cartItem = {
            id: Date.now(),
            productId: product.id,
            name: product.name,
            price: product.price,
            size: autoSize,
            color: product.color,
            image: product.image,
            quantity: 1
        };

        cart.push(cartItem);
        saveCart();

        tg.showPopup({
            title: "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É",
            message: `${product.name} (${autoSize}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`,
            buttons: [{ type: "ok" }]
        });
    } else if (availableSizes.length > 1) {
        openProduct(productId);
        tg.showPopup({
            title: "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä",
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞",
            buttons: [{ type: "ok" }]
        });
    } else {
        tg.showPopup({
            title: "–û—à–∏–±–∫–∞",
            message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞",
            buttons: [{ type: "ok" }]
        });
    }
}

function addToCartFromDetail() {
    if (!currentProduct) return;
    
    if (!selectedSize) {
        tg.showPopup({
            title: "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä",
            message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É",
            buttons: [{ type: "ok" }]
        });
        return;
    }

    const cartItem = {
        id: Date.now(),
        productId: currentProduct.id,
        name: currentProduct.name,
        price: currentProduct.price,
        size: selectedSize,
        color: currentProduct.color,
        image: currentProduct.image,
        quantity: 1
    };

    cart.push(cartItem);
    saveCart();

    tg.showPopup({
        title: "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É",
        message: `${currentProduct.name} (${selectedSize}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`,
        buttons: [{ type: "ok" }]
    });
}

function openCart() {
    renderCart();
    showPage('cart');
}

function renderCart() {
    const cartContainer = document.getElementById('cart-items');
    const emptyCart = document.getElementById('empty-cart');
    const totalPriceElement = document.getElementById('total-price');
    
    if (!cartContainer || !emptyCart || !totalPriceElement) return;
    
    if (cart.length === 0) {
        cartContainer.innerHTML = '';
        emptyCart.style.display = 'block';
        totalPriceElement.textContent = '0';
        return;
    }
    
    emptyCart.style.display = 'none';
    
    const totalPrice = cart.reduce((total, item) => total + (item.price * item.quantity), 0);
    totalPriceElement.textContent = totalPrice;
    
    cartContainer.innerHTML = cart.map(item => `
        <div class="cart-item">
            <img src="${item.image}" alt="${item.name}" class="cart-item-image" onerror="this.src='/static/images/placeholder.webp'">
            <div class="cart-item-info">
                <div class="cart-item-name">${item.name}</div>
                <div class="cart-item-details">
                    –†–∞–∑–º–µ—Ä: ${item.size} | –¶–≤–µ—Ç: ${item.color}
                </div>
                <div class="cart-item-price">${item.price}‚ÇΩ</div>
            </div>
            <button class="cart-item-remove" onclick="removeFromCart(${item.id})">üóëÔ∏è</button>
        </div>
    `).join('');
}

function removeFromCart(itemId) {
    cart = cart.filter(item => item.id !== itemId);
    saveCart();
    renderCart();
}

// ========== –û–§–û–†–ú–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê ==========
function checkout() {
    if (cart.length === 0) {
        tg.showAlert("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!");
        return;
    }

    const totalPrice = cart.reduce((total, item) => total + (item.price * item.quantity), 0);
    const user = tg.initDataUnsafe.user || {};

    const orderData = {
        products: cart,
        total_price: totalPrice,
        user: {
            id: user.id,
            first_name: user.first_name,
            username: user.username,
            language_code: user.language_code
        }
    };

    tg.showConfirm("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –º–µ–Ω–µ–¥–∂–µ—Ä—É?", (confirmed) => {
        if (confirmed) {
            tg.MainButton.showProgress();
            
            fetch("/api/order", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(orderData)
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => { throw new Error(err.detail) });
                }
                return response.json();
            })
            .then(data => {
                tg.MainButton.hideProgress();
                
                if (data.status === "success") {
                    cart = [];
                    saveCart();
                    renderCart();
                    showPage('home');
                    
                    tg.showAlert("‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.");
                } else {
                    throw new Error(data.detail);
                }
            })
            .catch(error => {
                tg.MainButton.hideProgress();
                console.error("Order error:", error);
                tg.showAlert("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞: " + error.message);
            });
        }
    });
}