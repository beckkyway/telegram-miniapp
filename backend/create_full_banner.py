from PIL import Image
import os
import glob

def create_full_banner():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–Ω–Ω–µ—Ä –¥–ª—è –ø–æ–ª–Ω–æ–π —à–∏—Ä–∏–Ω—ã"""
    
    source_folder = "original_images"
    
    if not os.path.exists(source_folder):
        print(f"‚ùå –ü–∞–ø–∫–∞ '{source_folder}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    # –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    images = []
    for ext in ['*.jpg', '*.jpeg', '*.png', '*.webp']:
        images.extend(glob.glob(os.path.join(source_folder, ext)))
    
    if not images:
        print("‚ùå –ü–æ–ª–æ–∂–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ backend/original_images/")
        return
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image_path = images[0]
    
    try:
        with Image.open(image_path) as img:
            print(f"üîÑ –°–æ–∑–¥–∞—é –±–∞–Ω–Ω–µ—Ä –∏–∑: {os.path.basename(image_path)}")
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if img.mode != 'RGB':
                img = img.convert('RGB')
            
            # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞ (—à–∏—Ä–æ–∫–∏–π —Ñ–æ—Ä–º–∞—Ç)
            # 800x400 –¥–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
            target_width = 800
            target_height = 400
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π –∏ –æ–±—Ä–µ–∑–∫–æ–π
            # –°–Ω–∞—á–∞–ª–∞ –≤—ã—á–∏—Å–ª—è–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è
            img_ratio = img.width / img.height
            target_ratio = target_width / target_height
            
            if img_ratio > target_ratio:
                # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à–∏—Ä–µ - –æ–±—Ä–µ–∑–∞–µ–º –ø–æ –±–æ–∫–∞–º
                new_height = target_height
                new_width = int(img.width * (target_height / img.height))
                img_resized = img.resize((new_width, new_height), Image.Resampling.LANCZOS)
                
                # –û–±—Ä–µ–∑–∞–µ–º –ø–æ —à–∏—Ä–∏–Ω–µ
                left = (new_width - target_width) // 2
                right = left + target_width
                banner = img_resized.crop((left, 0, right, target_height))
                
            else:
                # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã—à–µ - –æ–±—Ä–µ–∑–∞–µ–º —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É
                new_width = target_width
                new_height = int(img.height * (target_width / img.width))
                img_resized = img.resize((new_width, new_height), Image.Resampling.LANCZOS)
                
                # –û–±—Ä–µ–∑–∞–µ–º –ø–æ –≤—ã—Å–æ—Ç–µ
                top = (new_height - target_height) // 2
                bottom = top + target_height
                banner = img_resized.crop((0, top, target_width, bottom))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            os.makedirs("../frontend/images", exist_ok=True)
            output_path = "../frontend/images/banner.webp"
            banner.save(output_path, "WEBP", quality=85, optimize=True)
            
            file_size = os.path.getsize(output_path) / 1024
            print(f"‚úÖ –ë–∞–Ω–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω: {output_path}")
            print(f"üìä –†–∞–∑–º–µ—Ä: {banner.width}x{banner.height} px, –í–µ—Å: {file_size:.1f} KB")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üñº –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É")
    print("=" * 40)
    create_full_banner()